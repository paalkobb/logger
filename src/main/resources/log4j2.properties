# Properties
#Make sure to change log file path as per your need
property.filename = C:\\logs\\debug.log

#The level of internal Log4j events that should be logged to the console.
# Valid values for this attribute are "trace", "debug", "info", "warn", "error" and "fatal".
# Log4j will log details about initialization, rollover and other internal
# actions to the status logger.
# Setting status="trace" is one of the first tools available to you if you need to troubleshoot log4j.
status = error
name = PropertiesConfig


# Define appenders
appenders = rolling, console

# File logger
appender.rolling.type = RollingFile
appender.rolling.name = RollingFile
appender.rolling.fileName = ${filename}
appender.rolling.filePattern = C:\\logs\\Previous\\debug-backup-%d{MM-dd-yy-HH-mm-ss}-%i.log
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} [%t] %-5level %-50c{1.} - %msg %n
appender.rolling.policies.type = Policies
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.policies.size.type = SizeBasedTriggeringPolicy
appender.rolling.policies.size.size=10MB
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.max = 20

# Console logger
appender.console.type = Console
appender.console.name = STDOUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n
appender.console.filter.threshold.type = ThresholdFilter
appender.console.filter.threshold.level = error




# Loggers
#loggers = rolling
# Make sure to change the package structure as per your application
#logger.rolling.name = no.logger.LoggerApplication
#logger.rolling.level = debug
#logger.rolling.additivity = false
#logger.rolling.appenderRef.rolling.ref = RollingFile

# Rootlogger
rootLogger.level = info
rootLogger.appenderRef.stdout.ref = STDOUT